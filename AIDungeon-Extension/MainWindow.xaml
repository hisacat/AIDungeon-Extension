<Window x:Class="AIDungeon_Extension.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AIDungeon_Extension"
        xmlns:prop="clr-namespace:AIDungeon_Extension.Properties"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="AIDungeon Extension" Height="450" Width="800" MinHeight="200" MinWidth="400">

    <Window.CommandBindings>
        <CommandBinding Command="local:MainWindow.Reset" Executed="CommandBinding_Executed" />
        <CommandBinding Command="local:MainWindow.Save" Executed="CommandBinding_Executed" />
        <CommandBinding Command="local:MainWindow.Exit" Executed="CommandBinding_Executed" />
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Command="local:MainWindow.Reset" Modifiers="Ctrl" Key="R" />
        <KeyBinding Command="local:MainWindow.Save" Modifiers="Ctrl" Key="S" />
        <KeyBinding Command="local:MainWindow.Exit" Modifiers="Alt" Key="F4" />
    </Window.InputBindings>
    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="5" BorderThickness="0"
                                    Background="{StaticResource AID_Gray}">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource AID_DarkGray}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Background" Value="{StaticResource AID_Gray}"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource AID_White}"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource AID_White}"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource AID_Black}"/>
            <Setter Property="Foreground" Value="{StaticResource AID_White}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AID_Gray}"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="xctk:ColorPicker">
            <Setter Property="Background" Value="{StaticResource AID_Gray}"/>
            <!--<Setter Property="BorderBrush" Value="{StaticResource AID_Gray}"/>-->
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="20"/>
        </Style>
        <Style TargetType="MenuItem">
            <Setter Property="Height" Value="25"/>
        </Style>
    </Window.Resources>
    <Grid Background="{StaticResource AID_Black}">
        <DockPanel Background="Transparent">

            <!--Main menus-->
            <Menu IsMainMenu="True" DockPanel.Dock="Top" VerticalContentAlignment="Center">
                <MenuItem Header="{x:Static prop:Resources.WindowMenu_File}">
                    <MenuItem  Header="{x:Static prop:Resources.WindowMenu_File_Save}" Command="local:MainWindow.Save" InputGestureText="Ctrl+S"/>
                    <Separator/>
                    <MenuItem  Header="{x:Static prop:Resources.WindowMenu_File_Exit}" Command="local:MainWindow.Exit" InputGestureText="Alt+F4"/>
                </MenuItem>
                <MenuItem Header="{x:Static prop:Resources.WindowMenu_Settings}">
                    <MenuItem Header="{x:Static prop:Resources.WindowMenu_OpenSettings}" Click="OpenSideMenu"/>
                    <MenuItem  Header="{x:Static prop:Resources.WindowMenu_Reset}" Command="local:MainWindow.Reset" InputGestureText="Ctrl+R"/>
                    <!--<Separator/>-->
                    <MenuItem  Header="{x:Static prop:Resources.WindowMenu_RestartHooker}" Click="RestartHooker" Visibility="Collapsed"/>
                </MenuItem>
                <MenuItem Header="{x:Static prop:Resources.WindowMenu_Help}">
                    <MenuItem Header="{x:Static prop:Resources.WindowMenu_Help_CheckUpdate}" Click="Help_CheckForUpdate"/>
                    <MenuItem Header="{x:Static prop:Resources.WindowMenu_Developer}" Click="Help_Developer"/>
                </MenuItem>
            </Menu>

            <!--Bottom statusbar-->
            <StatusBar DockPanel.Dock="Bottom" Margin="0,0,0.333,0">
                <StatusBarItem>
                    <Grid>
                        <TextBlock Text="{Binding StatusText}" Foreground="Black"/>
                    </Grid>
                </StatusBarItem>
                <StatusBarItem HorizontalAlignment="Right">
                    <TextBlock Text="{Binding VersionText}" Foreground="Black"/>
                </StatusBarItem>
            </StatusBar>

            <!--SideMenu-->
            <Grid DockPanel.Dock="Right" Width="220" Visibility="{Binding SideMenuVisibility}">
                <Grid Margin="0,5,0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <!--Title-->
                    <Grid Grid.Row="0" Margin="10,0,5,0">
                        <Grid VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="25"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Settings" FontWeight="Bold" FontSize="18" HorizontalAlignment="Left"/>
                            <local:BackButtonControl Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right" Width="25" Height="25" Click="CloseSideMenu"/>
                        </Grid>
                    </Grid>
                    <!--Contents-->
                    <Grid Grid.Row="1">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel Margin="10">
                                <TextBlock Text="{x:Static prop:Resources.SideMenu_Display}" FontWeight="Bold"/>
                                <Control Height="5"/>
                                <Button Click="ChangeFont" Style="{StaticResource RoundCorner}">
                                    <TextBlock Text="{x:Static prop:Resources.SideMenu_Display_ChangeFont}" Margin="3"/>
                                </Button>

                                <!--Colors-->
                                <StackPanel Orientation="Vertical">
                                    <Control Height="5"/>
                                    <TextBlock Text="{x:Static prop:Resources.SideMenu_Color}" FontWeight="Bold"/>
                                    <Control Height="5"/>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="70"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{x:Static prop:Resources.SideMenu_BGColor}" VerticalAlignment="Center" Grid.Column="0"/>
                                        <xctk:ColorPicker x:Name="bgColorPicker" Grid.Column="1" ColorMode="ColorCanvas" SelectedColorChanged="bgColorPicker_SelectedColorChanged"/>
                                    </Grid>
                                    <Control Height="5"/>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="70"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{x:Static prop:Resources.SideMenu_TextColor}" VerticalAlignment="Center" Grid.Column="0"/>
                                        <xctk:ColorPicker x:Name="textColorPicker" Grid.Column="1" ColorMode="ColorCanvas" SelectedColorChanged="textColorPicker_SelectedColorChanged"/>
                                    </Grid>
                                    <Control Height="5"/>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="70"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{x:Static prop:Resources.SideMenu_InputBoxColor}" VerticalAlignment="Center" Grid.Column="0"/>
                                        <xctk:ColorPicker x:Name="inputBoxColorPicker" Grid.Column="1" ColorMode="ColorCanvas" SelectedColorChanged="inputBoxColorPicker_SelectedColorChanged"/>
                                    </Grid>
                                    <Control Height="5"/>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="70"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{x:Static prop:Resources.SideMenu_InputText}" VerticalAlignment="Center" Grid.Column="0"/>
                                        <xctk:ColorPicker x:Name="inputTextColorPicker" Grid.Column="1" ColorMode="ColorCanvas" SelectedColorChanged="inputTextColorPicker_SelectedColorChanged"/>
                                    </Grid>
                                </StackPanel>

                                <Control Height="10"/>
                                <TextBlock Text="{x:Static prop:Resources.SideMenu_Options}" FontWeight="Bold"/>
                                <Control Height="5"/>
                                <CheckBox Name="showOriginalTexts" Content="{x:Static prop:Resources.SideMenu_ShowOriginalTexts}" Checked="SideMenu_CheckBox_Checked" Unchecked="SideMenu_CheckBox_Unchecked"/>
                                <Control Height="5"/>
                                <CheckBox Name="detachNewlineTexts" Content="{x:Static prop:Resources.SideMenu_DetachNewlineTexts}" Checked="SideMenu_CheckBox_Checked" Unchecked="SideMenu_CheckBox_Unchecked"/>

                                <Control Height="5"/>
                                <Button Click="UpdateTranslateDictionary" Style="{StaticResource RoundCorner}">
                                    <TextBlock Text="{x:Static prop:Resources.SideMenu_UpdateDictionary}" Margin="3"/>
                                </Button>
                                <Control Height="10"/>
                                <TextBlock Text="{x:Static prop:Resources.SideMenu_ControlPanel}" FontWeight="Bold"/>
                                <Control Height="5"/>
                                <Button Command="local:MainWindow.Reset" Style="{StaticResource RoundCorner}">
                                    <TextBlock Text="{x:Static prop:Resources.SideMenu_Reset}" Margin="3"/>
                                </Button>
                                <Control Height="5"/>
                                <Button Click="RestartHooker" Style="{StaticResource RoundCorner}">
                                    <TextBlock Text="{x:Static prop:Resources.SideMenu_Hooker_Restart}" Margin="3"/>
                                </Button>

                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </Grid>

                <!--Left line-->
                <Rectangle Width="2" HorizontalAlignment="Left" Fill="{StaticResource AID_Gray}"/>
            </Grid>

            <!--Contents-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="50" MinHeight="0"/>
                </Grid.RowDefinitions>
                <!--Contents Actionss-->

                <Grid Grid.Row="0">
                    <Grid Background="{Binding BGColor}">
                        <TextBox x:Name="actionsTextBox"  IsReadOnly="True" TextWrapping="Wrap"  Height="auto" Margin="5"  Background="Transparent" Foreground="{Binding TextColor}"
                             FontFamily="{Binding FontFamily}" FontSize="{Binding FontSize}"  FontWeight="{Binding FontWeight}" FontStyle="{Binding FontStyle}" TextDecorations="{Binding TextDecorations}"
                             HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto" Text="Actions here"/>

                        <local:SideMenuButtonControl VerticalAlignment="Top" HorizontalAlignment="Right" Width="25" Height="20" Margin="10"
                                                 Opacity="0.9"
                                                 Click="OpenSideMenu" Visibility="{Binding SideMenuButtonVisibility}"/>
                    </Grid>
                </Grid>

                <!--Contents Input-->
                <Grid Grid.Row="1">
                    <Grid Background="{Binding InputBoxColor}">
                        <Grid Margin="5">
                            <TextBox x:Name="inputTextBox" Text="" TextWrapping="Wrap" AcceptsReturn="True" PreviewKeyDown="InputTextBox_PreviewKeyDown" VerticalScrollBarVisibility="Auto"
                            Background="Transparent" Foreground="{Binding InputTextColor}"
                             FontFamily="{Binding FontFamily}" FontSize="{Binding FontSize}"  FontWeight="{Binding FontWeight}" FontStyle="{Binding FontStyle}" TextDecorations="{Binding TextDecorations}"/>
                            <TextBlock x:Name="placeHolderTextBlock" Text="placeholder" IsHitTestVisible="False"
                               Background="Transparent" Foreground="{Binding InputTextColor}" Opacity="0.8"
                             FontFamily="{Binding FontFamily}" FontSize="{Binding FontSize}"  FontWeight="{Binding FontWeight}" FontStyle="{Binding FontStyle}" TextDecorations="{Binding TextDecorations}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=inputTextBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>

                        <Grid Background="#7F000000" Visibility="{Binding TranslateLoadingVisibility}">
                            <TextBlock Text="Translating..." VerticalAlignment="Center" HorizontalAlignment="Center"
                                   Foreground="White"
                                   FontSize="20"/>
                        </Grid>
                        <Grid Background="#7F000000" Visibility="{Binding InputLoadingVisibility}">
                            <TextBlock Text="Waitting..." VerticalAlignment="Center" HorizontalAlignment="Center"
                                   Foreground="White"
                                   FontSize="20"/>
                        </Grid>
                    </Grid>
                </Grid>
                <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="5" ShowsPreview="False"  Background="Black" Opacity="0.5"/>

                <Grid x:Name="translateWebBrowserGrid" Visibility="Hidden" Margin="50,50,50.333,141.667"/>
            </Grid>
        </DockPanel>
        <Grid Visibility="{Binding LoadingVisibility}">
            <local:LoadingIndicatorControl Visibility="Visible"/>
            <TextBlock Text="{Binding LoadingText}" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50" Margin="0,100,0,0"/>
        </Grid>
    </Grid>
</Window>
